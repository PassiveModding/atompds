// <auto-generated />
using System;
using ActorStore.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ActorStore.Migrations
{
    [DbContext(typeof(ActorStoreDb))]
    partial class ActorStoreDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ActorStore.Db.AccountPref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueJson")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("account_pref");
                });

            modelBuilder.Entity("ActorStore.Db.Backlink", b =>
                {
                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<string>("LinkTo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Uri", "Path");

                    b.HasIndex("Path", "LinkTo");

                    b.ToTable("backlink");
                });

            modelBuilder.Entity("ActorStore.Db.Blob", b =>
                {
                    b.Property<string>("Cid")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TakedownRef")
                        .HasColumnType("TEXT");

                    b.Property<string>("TempKey")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Width")
                        .HasColumnType("INTEGER");

                    b.HasKey("Cid");

                    b.HasIndex("TempKey");

                    b.ToTable("blob");
                });

            modelBuilder.Entity("ActorStore.Db.Record", b =>
                {
                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Collection")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IndexedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("RepoRev")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rkey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TakedownRef")
                        .HasColumnType("TEXT");

                    b.HasKey("Uri");

                    b.HasIndex("Cid");

                    b.HasIndex("Collection");

                    b.HasIndex("RepoRev");

                    b.ToTable("record");
                });

            modelBuilder.Entity("ActorStore.Db.RecordBlob", b =>
                {
                    b.Property<string>("BlobCid")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecordUri")
                        .HasColumnType("TEXT");

                    b.HasKey("BlobCid", "RecordUri");

                    b.ToTable("record_blob");
                });

            modelBuilder.Entity("ActorStore.Db.RepoBlock", b =>
                {
                    b.Property<string>("Cid")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("RepoRev")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Cid");

                    b.HasIndex("RepoRev", "Cid");

                    b.ToTable("repo_block");
                });

            modelBuilder.Entity("ActorStore.Db.RepoRoot", b =>
                {
                    b.Property<string>("Did")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IndexedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rev")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Did");

                    b.ToTable("repo_root");
                });
#pragma warning restore 612, 618
        }
    }
}
