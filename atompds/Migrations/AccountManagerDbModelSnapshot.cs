// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using atompds.Pds.AccountManager.Db;

#nullable disable

namespace atompds.Migrations
{
    [DbContext(typeof(AccountManagerDb))]
    partial class AccountManagerDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("atompds.Pds.AccountManager.Db.Schema.Account", b =>
                {
                    b.Property<string>("Did")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EmailConfirmedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("InvitesDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordSCrypt")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.HasKey("Did");

                    b.ToTable("account");
                });

            modelBuilder.Entity("atompds.Pds.AccountManager.Db.Schema.Actor", b =>
                {
                    b.Property<string>("Did")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeactivatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeleteAfter")
                        .HasColumnType("TEXT");

                    b.Property<string>("Handle")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<string>("TakedownRef")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.HasKey("Did");

                    b.HasIndex("CreatedAt", "Did");

                    b.ToTable("actor");
                });

            modelBuilder.Entity("atompds.Pds.AccountManager.Db.Schema.AppPassword", b =>
                {
                    b.Property<string>("Did")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSCrypt")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Privileged")
                        .HasColumnType("INTEGER");

                    b.HasKey("Did", "Name");

                    b.ToTable("app_password");
                });

            modelBuilder.Entity("atompds.Pds.AccountManager.Db.Schema.InviteCode", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<int>("AvailableUses")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ForAccount")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.HasIndex("ForAccount");

                    b.ToTable("invite_code");
                });

            modelBuilder.Entity("atompds.Pds.AccountManager.Db.Schema.InviteCodeUse", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<string>("UsedBy")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UsedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Code", "UsedBy");

                    b.ToTable("invite_code_use");
                });

            modelBuilder.Entity("atompds.Pds.AccountManager.Db.Schema.RefreshToken", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<string>("AppPasswordName")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<string>("Did")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("NextId")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Did");

                    b.ToTable("refresh_token");
                });

            modelBuilder.Entity("atompds.Pds.AccountManager.Db.Schema.RepoRoot", b =>
                {
                    b.Property<string>("Did")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cid")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IndexedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rev")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.HasKey("Did");

                    b.ToTable("repo_root");
                });
#pragma warning restore 612, 618
        }
    }
}
